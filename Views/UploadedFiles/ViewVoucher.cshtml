@model IEnumerable<Reports.Models.UploadedFile>

@{
    ViewData["Title"] = "View Batch Files";
    var firstFile = Model.FirstOrDefault();
}

<div class="container mt-4">

    <!-- 🔖 Header -->
    <div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center mb-4">
        <div>
            <h2 class="fw-bold text-primary mb-1">
                <i class="bi bi-folder2-open"></i> Files in Batch
            </h2>
            <small class="text-muted">View and manage uploaded documents for this voucher</small>
        </div>

        <div class="d-flex gap-2 mt-3 mt-md-0">
            <a asp-action="Index" asp-controller="PaymentVouchers" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left"></i> Back to List
            </a>
            @if (firstFile != null)
            {
                <a asp-action="Edit" asp-route-batchId="@firstFile.UploadBatchId" class="btn btn-warning">
                    <i class="bi bi-pencil-square"></i> Edit Batch
                </a>
            }
        </div>
    </div>

    <!-- ⚠️ No files -->
    @if (firstFile == null || !Model.Any())
    {
        <div class="alert alert-warning d-flex align-items-center" role="alert">
            <i class="bi bi-exclamation-triangle-fill me-2"></i>
            No files found for this voucher batch.
        </div>
    }
    else
    {
        <!-- 📊 Batch summary -->
        <div class="card shadow-sm border-0 mb-4">
            <div class="card-body d-flex flex-wrap justify-content-between gap-3">
                @if (firstFile.PaymentVoucher != null)
                {
                    <div>
                        <strong class="text-muted d-block">Voucher</strong>
                        <a asp-controller="PaymentVouchers" asp-action="Details" asp-route-id="@firstFile.PaymentVoucherId"
                           class="fw-semibold text-decoration-none text-primary">
                            @firstFile.PaymentVoucher.VoucheName
                        </a>
                    </div>
                }

                <div>
                    <strong class="text-muted d-block">Total Files</strong>
                    <span class="badge bg-primary fs-6 px-3 py-2">
                        <i class="bi bi-file-earmark-text"></i> @Model.Count()
                    </span>
                </div>

                <div>
                    <strong class="text-muted d-block">Last Uploaded</strong>
                    <span class="fw-semibold">@Model.Max(f => f.UploadedOn).ToString("f")</span>
                </div>
            </div>
        </div>

        <!-- 📁 Files Table -->
        <div class="card shadow-sm border-0">
            <div class="card-header bg-light d-flex justify-content-between align-items-center">
                <h5 class="mb-0"><i class="bi bi-archive"></i> Uploaded Files</h5>
                <span class="badge bg-info text-dark">@Model.Count() total</span>
            </div>

            <div class="table-responsive">
                <table class="table table-hover align-middle mb-0">
                    <thead class="table-primary">
                        <tr>
                            <th>#</th>
                            <th>File Name</th>
                            <th>In Favour Of</th>
                            <th>Status</th>
                            <th>Uploaded On</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var file in Model.OrderBy(f => f.FileName).Select((f, i) => new { File = f, Index = i + 1 }))
                        {
                            <tr>
                                <td class="fw-bold">@file.Index</td>
                                <td>@file.File.FileName</td>
                                <td>@file.File.InFavourOf</td>
                                <td>
                                    @if (file.File.FileExists)
                                    {
                                        <a href="@file.File.FilePath" target="_blank" class="btn btn-outline-info btn-sm">
                                            <i class="bi bi-box-arrow-up-right"></i> View @file.File.FileName
                                        </a>
                                    }
                                    else
                                    {
                                        <span class="btn btn-sm btn-danger d-inline-flex align-items-center gap-1">
                                            <i class="bi bi-x-circle"></i> Missing @file.File.FileName
                                        </span>
                                    }
                                </td>
                                <td>@file.File.UploadedOn.ToString("g")</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    }
</div>
