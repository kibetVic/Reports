// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Reports.Data;

#nullable disable

namespace Reports.Migrations
{
    [DbContext(typeof(ReportsDbContext))]
    partial class ReportsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Reports.Models.County", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CountyCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Counties");
                });

            modelBuilder.Entity("Reports.Models.PaymentVoucher", b =>
                {
                    b.Property<int>("PaymentVoucherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentVoucherId"));

                    b.Property<string>("AmountInWords")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApprovedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChequeNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CountyId")
                        .HasColumnType("int");

                    b.Property<int>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentInFavourOf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentMode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreparedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("VenueId")
                        .HasColumnType("int");

                    b.Property<string>("VoucheName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VoucherNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentVoucherId");

                    b.HasIndex("CountyId");

                    b.HasIndex("CreatedById");

                    b.HasIndex("VenueId");

                    b.ToTable("PaymentVouchers");
                });

            modelBuilder.Entity("Reports.Models.PaymentVoucherItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Cts")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("ItemNo")
                        .HasColumnType("int");

                    b.Property<int>("PaymentVoucherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaymentVoucherId");

                    b.ToTable("PaymentVoucherItems");
                });

            modelBuilder.Entity("Reports.Models.Summary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CountyId")
                        .HasColumnType("int");

                    b.Property<int?>("CountyId1")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("EANo")
                        .HasColumnType("int");

                    b.Property<decimal>("EATotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EachEAAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EachHallAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EachLeadFarmersAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("HallHireNo")
                        .HasColumnType("int");

                    b.Property<decimal>("HallHireTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("LeadFarmersNo")
                        .HasColumnType("int");

                    b.Property<decimal>("LeadFarmersTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("MpesaChargesPerEA")
                        .HasColumnType("int");

                    b.Property<int>("MpesaChargesPerHall")
                        .HasColumnType("int");

                    b.Property<int>("MpesaChargesPerLeadFarmers")
                        .HasColumnType("int");

                    b.Property<int>("PaymentVoucherId")
                        .HasColumnType("int");

                    b.Property<decimal>("SubTotalperVenue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalSum")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("VenueId")
                        .HasColumnType("int");

                    b.Property<int?>("VenueId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountyId");

                    b.HasIndex("CountyId1");

                    b.HasIndex("PaymentVoucherId");

                    b.HasIndex("VenueId");

                    b.HasIndex("VenueId1");

                    b.ToTable("Summaries");
                });

            modelBuilder.Entity("Reports.Models.UploadedFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PaymentVoucherId")
                        .HasColumnType("int");

                    b.Property<string>("UploadBatchId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PaymentVoucherId");

                    b.ToTable("UploadedFiles");
                });

            modelBuilder.Entity("Reports.Models.UserAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("LastLoginAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("UserAccounts");
                });

            modelBuilder.Entity("Reports.Models.Venue", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Venues");
                });

            modelBuilder.Entity("Reports.Models.VoucherImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<int>("PaymentVoucherId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PaymentVoucherId");

                    b.ToTable("VoucherImages");
                });

            modelBuilder.Entity("Reports.Models.PaymentVoucher", b =>
                {
                    b.HasOne("Reports.Models.County", null)
                        .WithMany("PaymentVouchers")
                        .HasForeignKey("CountyId");

                    b.HasOne("Reports.Models.UserAccount", "CreatedBy")
                        .WithMany("CreatedVouchers")
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Reports.Models.Venue", null)
                        .WithMany("PaymentVouchers")
                        .HasForeignKey("VenueId");

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("Reports.Models.PaymentVoucherItem", b =>
                {
                    b.HasOne("Reports.Models.PaymentVoucher", "PaymentVoucher")
                        .WithMany("Items")
                        .HasForeignKey("PaymentVoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentVoucher");
                });

            modelBuilder.Entity("Reports.Models.Summary", b =>
                {
                    b.HasOne("Reports.Models.County", "County")
                        .WithMany()
                        .HasForeignKey("CountyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Reports.Models.County", null)
                        .WithMany("Summaries")
                        .HasForeignKey("CountyId1");

                    b.HasOne("Reports.Models.PaymentVoucher", "Voucher")
                        .WithMany("Summaries")
                        .HasForeignKey("PaymentVoucherId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Reports.Models.Venue", "Venue")
                        .WithMany()
                        .HasForeignKey("VenueId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Reports.Models.Venue", null)
                        .WithMany("Summaries")
                        .HasForeignKey("VenueId1");

                    b.Navigation("County");

                    b.Navigation("Venue");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("Reports.Models.UploadedFile", b =>
                {
                    b.HasOne("Reports.Models.PaymentVoucher", "PaymentVoucher")
                        .WithMany("UploadedFile")
                        .HasForeignKey("PaymentVoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PaymentVoucher");
                });

            modelBuilder.Entity("Reports.Models.VoucherImage", b =>
                {
                    b.HasOne("Reports.Models.PaymentVoucher", "Voucher")
                        .WithMany()
                        .HasForeignKey("PaymentVoucherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("Reports.Models.County", b =>
                {
                    b.Navigation("PaymentVouchers");

                    b.Navigation("Summaries");
                });

            modelBuilder.Entity("Reports.Models.PaymentVoucher", b =>
                {
                    b.Navigation("Items");

                    b.Navigation("Summaries");

                    b.Navigation("UploadedFile");
                });

            modelBuilder.Entity("Reports.Models.UserAccount", b =>
                {
                    b.Navigation("CreatedVouchers");
                });

            modelBuilder.Entity("Reports.Models.Venue", b =>
                {
                    b.Navigation("PaymentVouchers");

                    b.Navigation("Summaries");
                });
#pragma warning restore 612, 618
        }
    }
}
